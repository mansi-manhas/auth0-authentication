const express = require("express");
const cors = require("cors");
const dotenv = require("dotenv");

dotenv.config();

/**
 * Authentication AuthO Middleware Integration
 */
const { expressjwt: jwt } = require("express-jwt");
const jwksRsa = require("jwks-rsa");

const app = express();
app.use(cors());
app.use(express.json());

const PORT = process.env.PORT || 5000

app.get("/", (req, res) => {
  res.send("Hello World!");
}); //Right now this is being displayed, fix this to display the static HTML generated by react build 

/**
 * Example:
 * 
 * 
mongoose.connect(dbUrl, { useNewUrlParser: true, useUnifiedTopology: true })
  .then(() => console.log('Database connected successfully'))
  .catch(err => console.error('Database connection error:', err));

// Serve static files from the React app
app.use(express.static(path.join(__dirname, 'client/build')));

app.get('/api', (req, res) => {
  res.send('Hello World!');
});

// The "catchall" handler: for any request that doesn't
// match one above, send back React's index.html file.
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/build', 'index.html'));
});
 */

const checkJwt = jwt({
    // Dynamically provide a signing key based on the kid in the header and signing keys provided by the JWKS endpoint.
    secret: jwksRsa.expressJwtSecret({
      cache: true,
      rateLimit: true,
      jwksRequestsPerMinute: 5,
      jwksUri: `${process.env.AUTH0_ISSUER}.well-known/jwks.json`,
    }),
  
    //Validate audience and issuer
    audience: process.env.AUTH0_AUDIENCE,
    issuer: `https://${process.env.AUTH0_DOMAIN}/`,
    algorithms: ["RS256"],
  });
  
  app.get("/api/protected", checkJwt, (req, res) => {
    res.json({
      message: "You have accessed a protected endpoint",
    });
  });

app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
